services:
  postgres:
    image: postgres:16-alpine
    container_name: myapp_postgres
    restart: unless-stopped
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: myapp
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  api:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: myapp_api
    restart: unless-stopped
    ports:
      - "3003:3003"
    environment:
      NODE_ENV: production
      PORT: 3003
      DATABASE_URL: postgresql://postgres:postgres@postgres:5432/myapp
      BETTER_AUTH_SECRET: ${BETTER_AUTH_SECRET:-change-this-secret-in-production}
      BETTER_AUTH_URL: ${BETTER_AUTH_URL:-http://localhost:3003}
      BETTER_AUTH_TRUSTED_ORIGINS: ${BETTER_AUTH_TRUSTED_ORIGINS:-http://localhost:3003}
    depends_on:
      postgres:
        condition: service_healthy
    volumes:
      - ./src:/app/src
    command: bun run dev

  migrations:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: myapp_migrations
    environment:
      DATABASE_URL: postgresql://postgres:postgres@postgres:5432/myapp
    depends_on:
      postgres:
        condition: service_healthy
    command: bun run migrate:apply
    restart: "no"

volumes:
  postgres_data:
